<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
</head>

<body>
<h1 align="center">ЛАБОРАТОРНАЯ РАБОТА №2</h1>
<h2>ТЕМА.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Составление алгоритмов на бинарных деревьях.</h2>
<h2>Цель работы. &nbsp;&nbsp;&nbsp;Научиться составлять алгоритмы работы с динамическими множествами,<br>
  представленными бинарными деревьями.
</h2>
<h3 align="center">&nbsp;</h3>
<h3 align="center">1ОБЩИЕ ПОЛОЖЕНИЯ.</h3>
<p>Дерево без выделенного корня – это связный ациклический неориентированный граф. 
  Корневое дерево: в дереве выделяется одна вершина, которая называется корнем. 
  Пусть х- произвольная вершина корневого дерева с корнем r. Существует единственный 
  путь из r в x; все вершины, находящиеся на этом пути, называются предками вершины 
  х. Если у – предок, то х – потомок у.</p>
<p>Для каждой вершины х можно рассмотреть дерево, состоящее из всех потомков х, 
  в котором х считается корнем. Такое дерево называется поддеревом с корнем х. 
  Если (у,х) – последнее ребро на пути из корня в х , то у называется родителем 
  х, а х – ребёнком у. Корень – единственная вершина, у которой нет родителя. 
  Вершина корневого дерева, не имеющая детей, называется листом. Вершины, имеющие 
  детей называются внутренними.</p>
<p>Двоичным называется дерево, у которого каждая внутренняя вершина имеет двух 
  детей. Более точно: конечный набор вершин, который либо пуст, либо разбит на 
  три непересекающиеся части – корень, левое двоичное поддерево корня, правое 
  двоичное поддерево корня.</p>
<p>Двоичные деревья в памяти ЭВМ можно представлять списками. Каждый элемент списка 
  использует поля p, left, right, в которых хранятся указатели на родителя, левого 
  и правого ребёнка соответственно. Если p[x]=NIL, то х – корень. Если у х нет 
  левого или правого ребёнка, то left[x] или right[x] есть NIL.С деревом Т атрибут 
  (параметр) root[Т] – указатель на его корень. Если root[T]=NIL, то дерево Т 
  – пустое.</p>
<p>В определённых приложениях дерево можно представлять массивом с заданными свойствами 
  упорядоченности. Каждая вершина дерева соответствует элементу массива. Если 
  вершина дерева имеет номер i, то её родитель имеет номер [i/2] – целая часть 
  от де- ления . Вершина с номером 1 есть корень. Дети вершины i имеют номера 
  2i и 2i+1. По- добное дерево называется кучей. Кучу можно представить массивом, 
  в котором индексы соответствуют нумерации вершин дерева, а элемент массива содержит 
  ту же информацию, что и вершина дерева. Основное свойство кучи: для каждой вершины 
  i, кроме корня, A[Parent[i]] &gt;= A[i] - значение потомка не превосходит значение 
  предка.</p>
<p>Деревья поиска позволяют использование двоичного дерева для представления динамических 
  множеств. Дерево поиска может быть использовано как словарь(поиск элемента в 
  множестве) и как очередь с приоритетами. С каждой вершиной дерева поиска связано 
  значение ключа (key). Ключи в двоичном дереве поиска хранятся с соблюдением 
  свойства упорядоченности: пусть х - произвольная вершина дерева; если у находится 
  в левом поддереве вершины х , то key[y] &lt;= key[x]; иначе key[y] &gt;= key[x].<br>
</p>
<h3 align="center">2 ВЫПОЛНЕНИЕ РАБОТЫ.</h3>
<p>В соответствии с полученным заданием составить алгоритм и программу <br>
  обработки двоичного дерева.<br>
</p>
<h3 align="center">3 ЗАДАНИЯ</h3>
<ol>
  <li>Для двоичного дерева поиска , выпечатать все ключи.</li>
  <li>В двоичном дереве поиска , осуществить поиск элемента (вершины) с ключом 
    к .</li>
  <li>В двоичном дереве поиска найти максимальный элемент и минимальный элемент.</li>
  <li>В двоичном дереве поиска найти элемент следующий за данным.</li>
  <li>В двоичном дереве поиска найти элемент, предшествующий данному.</li>
  <li>В двоичное дереве поиска распечатать все листья.</li>
  <li>В двоичном дереве поиска удалить элемент.</li>
  <li>Получить из массива кучу, упорядочив его в соответствии с основным свойством 
    кучи.</li>
  <li>Отсортировать массив, используя промежуточное представление в виде двоичной 
    кучи.<br>
  </li>
</ol>
<p>&nbsp;</p>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="Лекция №4.htm">Вернуться на лекцию”.</A><P>

<P><br>
<font color="#481493" size="3" face="arial">
&copy, 2004, ХНУРЭ, каф. ПОЭВМ, Дюбко Г. Ф., все вопросы направлять по адресу: Valenda@ukr.net</font></p>
<p>&nbsp;</p>
</body>
</html>
